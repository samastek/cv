name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        id: setup_pages
        uses: actions/configure-pages@v5

      - name: Debug base path
        run: |
          echo "Base path from setup_pages: '${{ steps.setup_pages.outputs.base_path }}'"
          echo "Base path length: ${#BASE_PATH}"
        env:
          BASE_PATH: ${{ steps.setup_pages.outputs.base_path }}

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build with Next.js
        run: npm run build
        env:
          PAGES_BASE_PATH: ${{ steps.setup_pages.outputs.base_path }}
          NEXT_PUBLIC_BASE_PATH: ${{ steps.setup_pages.outputs.base_path }}

      - name: List build output
        run: |
          echo "Contents of out directory:"
          ls -la out/
          echo ""
          echo "Contents of out/_next/ (if exists):"
          ls -la out/_next/ || echo "No _next directory found"
          echo ""
          echo "Checking for index.html content:"
          head -20 out/index.html || echo "No index.html found"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      